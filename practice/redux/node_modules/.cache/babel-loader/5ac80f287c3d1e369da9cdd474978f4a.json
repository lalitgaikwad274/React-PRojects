{"ast":null,"code":"import rootReducer from \"./Reducer/Reducer\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\"; // const logger = ({ getState }) => {\n//    return (next) => (action) => {\n//       console.log(\"will Dispatch\", action);\n//       const returnValue = next(action);\n//       console.log(\"state after dispatch\", getState());\n//       return returnValue;\n//    };\n// };\n\nconst logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(logger));\nexport default store;","map":{"version":3,"names":["rootReducer","createStore","applyMiddleware","createLogger","logger","store"],"sources":["/home/lalit/Training Data/REACT DATA/practice/src/components/redux/store.js"],"sourcesContent":["import rootReducer from \"./Reducer/Reducer\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\n// const logger = ({ getState }) => {\n//    return (next) => (action) => {\n//       console.log(\"will Dispatch\", action);\n//       const returnValue = next(action);\n\n//       console.log(\"state after dispatch\", getState());\n//       return returnValue;\n//    };\n// };\nconst logger = createLogger();\n\nconst store = createStore(rootReducer, applyMiddleware(logger));\n\nexport default store;\n"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,cAA7B,C,CACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA,MAAMC,MAAM,GAAGD,YAAY,EAA3B;AAEA,MAAME,KAAK,GAAGJ,WAAW,CAACD,WAAD,EAAcE,eAAe,CAACE,MAAD,CAA7B,CAAzB;AAEA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}