{"ast":null,"code":"var _jsxFileName = \"/home/lalit/Training Data/REACT DATA/practice/src/components/Counter.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  const initialState = {\n    count: 0\n  };\n\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"increment\":\n        return {\n          count: state.count + 1\n        };\n\n      case \"decrement\":\n        return {\n          count: state.count - 1\n        };\n\n      case \"reset\":\n        return;\n\n      default:\n        throw new Error();\n    }\n  }\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Count: \", state.count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"decrement\"\n      }),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"increment\"\n      }),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"reset\"\n      }),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Counter, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useReducer","Counter","initialState","count","reducer","state","action","type","Error","dispatch"],"sources":["/home/lalit/Training Data/REACT DATA/practice/src/components/Counter.js"],"sourcesContent":["import React from \"react\";\nimport { useReducer } from \"react\";\n\nconst Counter = () => {\n   const initialState = { count: 0 };\n\n   function reducer(state, action) {\n      switch (action.type) {\n         case \"increment\":\n            return { count: state.count + 1 };\n         case \"decrement\":\n            return { count: state.count - 1 };\n        case \"reset\":\n            return\n\n         default:\n            throw new Error();\n      }\n   }\n   const [state, dispatch] = useReducer(reducer, initialState);\n   return (\n      <>\n         <h1>Count: {state.count}</h1>\n         <button onClick={() => dispatch({ type: \"decrement\" })}>-</button>\n         <button onClick={() => dispatch({ type: \"increment\" })}>+</button>\n         <button onClick={() => dispatch({ type: \"reset\" })}>+</button>\n      </>\n   );\n};\n\nexport default Counter;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACnB,MAAMC,YAAY,GAAG;IAAEC,KAAK,EAAE;EAAT,CAArB;;EAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;IAC7B,QAAQA,MAAM,CAACC,IAAf;MACG,KAAK,WAAL;QACG,OAAO;UAAEJ,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;QAAvB,CAAP;;MACH,KAAK,WAAL;QACG,OAAO;UAAEA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;QAAvB,CAAP;;MACJ,KAAK,OAAL;QACI;;MAEH;QACG,MAAM,IAAIK,KAAJ,EAAN;IATN;EAWF;;EACD,MAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBT,UAAU,CAACI,OAAD,EAAUF,YAAV,CAApC;EACA,oBACG;IAAA,wBACG;MAAA,sBAAYG,KAAK,CAACF,KAAlB;IAAA;MAAA;MAAA;MAAA;IAAA,QADH,eAEG;MAAQ,OAAO,EAAE,MAAMM,QAAQ,CAAC;QAAEF,IAAI,EAAE;MAAR,CAAD,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFH,eAGG;MAAQ,OAAO,EAAE,MAAME,QAAQ,CAAC;QAAEF,IAAI,EAAE;MAAR,CAAD,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHH,eAIG;MAAQ,OAAO,EAAE,MAAME,QAAQ,CAAC;QAAEF,IAAI,EAAE;MAAR,CAAD,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJH;EAAA,gBADH;AAQF,CAzBD;;GAAMN,O;;KAAAA,O;AA2BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}