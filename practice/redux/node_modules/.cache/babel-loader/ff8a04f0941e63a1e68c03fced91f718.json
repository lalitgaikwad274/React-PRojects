{"ast":null,"code":"var _jsxFileName = \"/home/lalit/Training Data/REACT DATA/practice/src/components/Counter.js\";\nimport React from \"react\"; // import { useReducer } from \"react\";\n\nimport { Connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  // const initialState = {\n  //    numOfCakes: 20,\n  //    numOfIcecream: 10,\n  // };\n  // function reducer(state, action) {\n  //    switch (action.type) {\n  //       case \"BUY_CAKE\":\n  //          return { ...state, numOfCakes: state.numOfCakes - 1 };\n  //       case \"BUY_ICECREAM\":\n  //          return { ...state, numOfIcecream: state.numOfIcecream - 1 };\n  //       default:\n  //          throw new Error();\n  //    }\n  // }\n  // const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Cake_Count: \", state.numOfCakes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Icecream_Count: \", state.numOfIcecream]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"BUY_CAKE\"\n      }),\n      children: \"BUY_CAKE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"BUY_ICECREAM\"\n      }),\n      children: \"BUY_ICECREAM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Counter;\nconst initialState = {\n  numOfCakes: 20,\n  numOfIcecream: 10\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"BUY_CAKE\":\n      return { ...state,\n        numOfCakes: state.numOfCakes - 1\n      };\n\n    case \"BUY_ICECREAM\":\n      return { ...state,\n        numOfIcecream: state.numOfIcecream - 1\n      };\n\n    default:\n      throw new Error();\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({// ... computed data from state and optionally ownProps\n});\n\nconst mapDispatchToProps = {// ... normally is an object full of action creators\n};\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","Connect","Counter","state","numOfCakes","numOfIcecream","dispatch","type","initialState","reducer","action","Error","mapStateToProps","ownProps","mapDispatchToProps"],"sources":["/home/lalit/Training Data/REACT DATA/practice/src/components/Counter.js"],"sourcesContent":["import React from \"react\";\n// import { useReducer } from \"react\";\nimport { Connect } from \"react-redux\";\n\nconst Counter = () => {\n   // const initialState = {\n   //    numOfCakes: 20,\n   //    numOfIcecream: 10,\n   // };\n\n   // function reducer(state, action) {\n   //    switch (action.type) {\n   //       case \"BUY_CAKE\":\n   //          return { ...state, numOfCakes: state.numOfCakes - 1 };\n   //       case \"BUY_ICECREAM\":\n   //          return { ...state, numOfIcecream: state.numOfIcecream - 1 };\n   //       default:\n   //          throw new Error();\n   //    }\n   // }\n   // const [state, dispatch] = useReducer(reducer, initialState);\n   return (\n      <>\n         <h1>Cake_Count: {state.numOfCakes}</h1>\n         <h1>Icecream_Count: {state.numOfIcecream}</h1>\n\n         <button onClick={() => dispatch({ type: \"BUY_CAKE\" })}>\n            BUY_CAKE\n         </button>\n         <button onClick={() => dispatch({ type: \"BUY_ICECREAM\" })}>\n            BUY_ICECREAM\n         </button>\n      </>\n   );\n};\n\nconst initialState = {\n   numOfCakes: 20,\n   numOfIcecream: 10,\n};\n\nfunction reducer(state, action) {\n   switch (action.type) {\n      case \"BUY_CAKE\":\n         return { ...state, numOfCakes: state.numOfCakes - 1 };\n      case \"BUY_ICECREAM\":\n         return { ...state, numOfIcecream: state.numOfIcecream - 1 };\n      default:\n         throw new Error();\n   }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n   // ... computed data from state and optionally ownProps\n});\n\nconst mapDispatchToProps = {\n   // ... normally is an object full of action creators\n};\n\nexport default Counter;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EACnB;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACG;IAAA,wBACG;MAAA,2BAAiBC,KAAK,CAACC,UAAvB;IAAA;MAAA;MAAA;MAAA;IAAA,QADH,eAEG;MAAA,+BAAqBD,KAAK,CAACE,aAA3B;IAAA;MAAA;MAAA;MAAA;IAAA,QAFH,eAIG;MAAQ,OAAO,EAAE,MAAMC,QAAQ,CAAC;QAAEC,IAAI,EAAE;MAAR,CAAD,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJH,eAOG;MAAQ,OAAO,EAAE,MAAMD,QAAQ,CAAC;QAAEC,IAAI,EAAE;MAAR,CAAD,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPH;EAAA,gBADH;AAaF,CA9BD;;KAAML,O;AAgCN,MAAMM,YAAY,GAAG;EAClBJ,UAAU,EAAE,EADM;EAElBC,aAAa,EAAE;AAFG,CAArB;;AAKA,SAASI,OAAT,CAAiBN,KAAjB,EAAwBO,MAAxB,EAAgC;EAC7B,QAAQA,MAAM,CAACH,IAAf;IACG,KAAK,UAAL;MACG,OAAO,EAAE,GAAGJ,KAAL;QAAYC,UAAU,EAAED,KAAK,CAACC,UAAN,GAAmB;MAA3C,CAAP;;IACH,KAAK,cAAL;MACG,OAAO,EAAE,GAAGD,KAAL;QAAYE,aAAa,EAAEF,KAAK,CAACE,aAAN,GAAsB;MAAjD,CAAP;;IACH;MACG,MAAM,IAAIM,KAAJ,EAAN;EANN;AAQF;;AAED,MAAMC,eAAe,GAAG,CAACT,KAAD,EAAQU,QAAR,MAAsB,CAC3C;AAD2C,CAAtB,CAAxB;;AAIA,MAAMC,kBAAkB,GAAG,CACxB;AADwB,CAA3B;AAIA,eAAeZ,OAAf"},"metadata":{},"sourceType":"module"}