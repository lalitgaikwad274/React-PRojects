{"ast":null,"code":"import rootReducer from \"./Reducer/Reducer\";\nimport { createStore, applyMiddleware } from \"redux\";\n// import { createLogger } from \"redux-logger\";\n// const logger = ({ getState }) => {\n//    return (next) => (action) => {\n//       console.log(\"will Dispatch\", action);\n//       const returnValue = next(action);\n\n//       console.log(\"state after dispatch\", getState());\n//       return returnValue;\n//    };\n// };\nconst logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(logger));\nexport default store;","map":{"version":3,"names":["rootReducer","createStore","applyMiddleware","logger","createLogger","store"],"sources":["/home/lalit/Training Data/REACT DATA/practice/redux-thunk/src/components/redux/store.js"],"sourcesContent":["import rootReducer from \"./Reducer/Reducer\";\n\nimport { createStore, applyMiddleware } from \"redux\";\n// import { createLogger } from \"redux-logger\";\n// const logger = ({ getState }) => {\n//    return (next) => (action) => {\n//       console.log(\"will Dispatch\", action);\n//       const returnValue = next(action);\n\n//       console.log(\"state after dispatch\", getState());\n//       return returnValue;\n//    };\n// };\nconst logger = createLogger();\n\nconst store = createStore(rootReducer, applyMiddleware(logger));\n\nexport default store;\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,mBAAmB;AAE3C,SAASC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAGC,YAAY,EAAE;AAE7B,MAAMC,KAAK,GAAGJ,WAAW,CAACD,WAAW,EAAEE,eAAe,CAACC,MAAM,CAAC,CAAC;AAE/D,eAAeE,KAAK"},"metadata":{},"sourceType":"module"}