{"ast":null,"code":"// import { combineReducers } from \"redux\";\n// const initialState = {\n//    count: 10,\n// };\n// console.log(\"inReducer\", initialState);\nconst countReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"increment\":\n      return { ...state,\n        count: state.count + 1\n      };\n\n    case \"decrement\":\n      return { ...state,\n        count: state.count - 1\n      };\n\n    default:\n      return state;\n  }\n}; // const rootReducer = combineReducers(countReducer);\n\n\nexport default countReducer;","map":{"version":3,"names":["countReducer","state","initialState","action","type","count"],"sources":["/home/lalit/Training Data/REACT DATA/foodapplication/src/components/Reducer/Reducer.js"],"sourcesContent":["// import { combineReducers } from \"redux\";\n// const initialState = {\n//    count: 10,\n// };\n\n// console.log(\"inReducer\", initialState);\n\nconst countReducer = (state = initialState, action) => {\n   switch (action.type) {\n      case \"increment\":\n         return { ...state, count: state.count + 1 };\n      case \"decrement\":\n         return { ...state, count: state.count - 1 };\n      default:\n         return state;\n   }\n};\n\n// const rootReducer = combineReducers(countReducer);\n\nexport default countReducer;\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA,MAAMA,YAAY,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBC,YAAyB;EAAA,IAAXC,MAAW;;EACpD,QAAQA,MAAM,CAACC,IAAf;IACG,KAAK,WAAL;MACG,OAAO,EAAE,GAAGH,KAAL;QAAYI,KAAK,EAAEJ,KAAK,CAACI,KAAN,GAAc;MAAjC,CAAP;;IACH,KAAK,WAAL;MACG,OAAO,EAAE,GAAGJ,KAAL;QAAYI,KAAK,EAAEJ,KAAK,CAACI,KAAN,GAAc;MAAjC,CAAP;;IACH;MACG,OAAOJ,KAAP;EANN;AAQF,CATD,C,CAWA;;;AAEA,eAAeD,YAAf"},"metadata":{},"sourceType":"module"}