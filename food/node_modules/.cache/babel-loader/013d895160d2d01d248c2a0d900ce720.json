{"ast":null,"code":"// import { combineReducers } from \"redux\";\nconst initialState = {\n  count: 10\n};\n\nconst countReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"addToCart\":\n      console.log(\"in AddTOCart\", action);\n      const check = CartItems.find(cartProduct => cartProduct.id === itemData.id);\n\n      if (check) {\n        return state;\n      } else {\n        product = itemData.itemDetails; // product[\"qty\"] = 1;\n\n        updatedQty = totalQty + 1;\n        updatedPrice = totalPrice + product.price;\n        updatedCart = {\n          CartItems: [product, ...CartItems],\n          totalPrice: updatedPrice,\n          totalQty: updatedQty\n        };\n        localStorage.setItem(\"foodcart\", JSON.stringify(updatedCart));\n        return updatedCart;\n      }\n\n      break;\n\n    case \"increment\":\n      return { ...state,\n        count: state.count + 1\n      };\n\n    case \"decrement\":\n      return { ...state,\n        count: state.count - 1\n      };\n\n    default:\n      return state;\n  }\n}; // const rootReducer = combineReducers(countReducer);\n\n\nexport default countReducer;","map":{"version":3,"names":["initialState","count","countReducer","state","action","type","console","log","check","CartItems","find","cartProduct","id","itemData","product","itemDetails","updatedQty","totalQty","updatedPrice","totalPrice","price","updatedCart","localStorage","setItem","JSON","stringify"],"sources":["/home/lalit/Training Data/REACT DATA/food/src/components/Reducer/Reducer.js"],"sourcesContent":["// import { combineReducers } from \"redux\";\nconst initialState = {\n   count: 10,\n};\n\nconst countReducer = (state = initialState, action) => {\n   switch (action.type) {\n      case \"addToCart\":\n         console.log(\"in AddTOCart\", action);\n         const check = CartItems.find(\n            (cartProduct) => cartProduct.id === itemData.id\n         );\n         if (check) {\n            return state;\n         } else {\n            product = itemData.itemDetails;\n            // product[\"qty\"] = 1;\n            updatedQty = totalQty + 1;\n            updatedPrice = totalPrice + product.price;\n            updatedCart = {\n               CartItems: [product, ...CartItems],\n               totalPrice: updatedPrice,\n               totalQty: updatedQty,\n            };\n            localStorage.setItem(\"foodcart\", JSON.stringify(updatedCart));\n            return updatedCart;\n         }\n         break;\n      case \"increment\":\n         return { ...state, count: state.count + 1 };\n      case \"decrement\":\n         return { ...state, count: state.count - 1 };\n      default:\n         return state;\n   }\n};\n\n// const rootReducer = combineReducers(countReducer);\n\nexport default countReducer;\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG;EAClBC,KAAK,EAAE;AADW,CAArB;;AAIA,MAAMC,YAAY,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBH,YAAyB;EAAA,IAAXI,MAAW;;EACpD,QAAQA,MAAM,CAACC,IAAf;IACG,KAAK,WAAL;MACGC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,MAA5B;MACA,MAAMI,KAAK,GAAGC,SAAS,CAACC,IAAV,CACVC,WAAD,IAAiBA,WAAW,CAACC,EAAZ,KAAmBC,QAAQ,CAACD,EADlC,CAAd;;MAGA,IAAIJ,KAAJ,EAAW;QACR,OAAOL,KAAP;MACF,CAFD,MAEO;QACJW,OAAO,GAAGD,QAAQ,CAACE,WAAnB,CADI,CAEJ;;QACAC,UAAU,GAAGC,QAAQ,GAAG,CAAxB;QACAC,YAAY,GAAGC,UAAU,GAAGL,OAAO,CAACM,KAApC;QACAC,WAAW,GAAG;UACXZ,SAAS,EAAE,CAACK,OAAD,EAAU,GAAGL,SAAb,CADA;UAEXU,UAAU,EAAED,YAFD;UAGXD,QAAQ,EAAED;QAHC,CAAd;QAKAM,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeJ,WAAf,CAAjC;QACA,OAAOA,WAAP;MACF;;MACD;;IACH,KAAK,WAAL;MACG,OAAO,EAAE,GAAGlB,KAAL;QAAYF,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;MAAjC,CAAP;;IACH,KAAK,WAAL;MACG,OAAO,EAAE,GAAGE,KAAL;QAAYF,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;MAAjC,CAAP;;IACH;MACG,OAAOE,KAAP;EA3BN;AA6BF,CA9BD,C,CAgCA;;;AAEA,eAAeD,YAAf"},"metadata":{},"sourceType":"module"}